Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 freetype-py (2.1.0.post1-1) UNRELEASED; urgency=medium
 .
   * Updated to latest version available on pypy
Author: David Carne <davidcarne@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2019-08-24

--- freetype-py-2.1.0.post1.orig/freetype_py.egg-info/PKG-INFO
+++ /dev/null
@@ -1,159 +0,0 @@
-Metadata-Version: 1.1
-Name: freetype-py
-Version: 2.1.0.post1
-Summary: Freetype python bindings
-Home-page: https://github.com/rougier/freetype-py
-Author: Nicolas P. Rougier
-Author-email: Nicolas.Rougier@inria.fr
-License: UNKNOWN
-Description: FreeType (high-level Python API)
-        ================================
-        
-        Freetype Python provides bindings for the FreeType library. Only the
-        high-level API is bound.
-        
-        Documentation available at: http://freetype-py.readthedocs.org/en/latest/
-        
-        Installation
-        ============
-        
-        **From PyPI, recommended**: `pip install freetype-py`. This will install the
-        library with a bundled FreeType binary, so you're ready to go on Windows,
-        macOS and Linux (all with 32 and 64 bit x86 architecture support).
-        
-        Do note: if you specify the `--no-binary` paramater to pip, or use a different
-        architecture for which we don't pre-compile binaries, the package will default
-        to using an external FreeType library. Specify the environment variable
-        `FREETYPEPY_BUNDLE_FT=1` before calling pip to compile a binary yourself.
-        
-        Installation with compiling FreeType from source
-        ------------------------------------------------
-        
-        If you don't want to or can't use the pre-built binaries, build FreeType
-        yourself: `export FREETYPEPY_BUNDLE_FT=yesplease && pip install .`.
-        This will download and compile FreeType with Harfbuzz support as specified in
-        `setup-build-freetype.py`. Set the environment variable `PYTHON_ARCH` to 32 or
-        64 to explicitly set an architecture, default is whatever your host machine
-        uses. On macOS, we will always build a universal 32 and 64 bit Intel binary.
-        
-        - Windows: You need CMake and a C and C++ compiler, e.g. the Visual Code
-          Community 2017 distribution with the desktop C++ workload.
-        - macOS: You need CMake and the XCode tools (full IDE not necessary)
-        - Linux: You need CMake, gcc and g++. For building a 32 bit library on a
-          64 bit machine, you need gcc-multilib and g++-multilib (Debian) or
-          glibc-devel.i686 and libstdc++-devel.i686 (Fedora).
-        
-        Installation with an external FreeType library (the default)
-        ------------------------------------------------------------
-        
-        Install just the pure Python library and let it find a system-wide installed
-        FreeType at runtime.
-        
-        Mac users
-        ~~~~~~~~~
-        
-        Freetype should be already installed on your system. If not, either install it
-        using `homebrew <http://brew.sh>`_ or compile it and place the library binary
-        file in '/usr/local/lib'.
-        
-        Linux users
-        ~~~~~~~~~~~
-        
-        Freetype should be already installed on your system. If not, either install
-        relevant package from your package manager or compile from sources and place
-        the library binary file in '/usr/local/lib'.
-        
-        Window users
-        ~~~~~~~~~~~~
-        
-        There are no official Freetype binary releases available, but they offer some
-        links to precompiled Windows DLLs. Please see the `FreeType Downloads
-        <https://www.freetype.org/download.html>`_ page for links.
-        You can also compile the FreeType library from source yourself.
-        
-        If you are using freetype-py on Windows with a 32-Bit version of Python, you
-        need the 32-Bit version of the Freetype binary. The same applies for a 64-Bit
-        version of Python.
-        
-        Because of the way Windows searches for dll files, make sure the resulting
-        file is named 'freetype.dll' (and not something like Freetype245.dll).
-        Windows expects the library in one of the directories listed in the $PATH
-        environment variable. As it is not recommended to place the dll in a Windows
-        system folder, you can choose one of the following ways to solve this:
-        
-        * Place library in a folder of your choice and edit the $PATH user
-          environment variable
-        * Place library in a folder of your choice and edit the $PATH system
-          environment variable
-        * For development purpose, place the library in the working directory of
-          the application
-        * Place the library in one of the existing directories listed in $PATH
-        
-        To get a complete list of all the directories in the $PATH
-        environment variable (user and system), open a command promt and type
-        
-        .. code::
-        
-           echo %PATH%
-        
-        Usage example
-        =============
-        
-        .. code:: python
-        
-           import freetype
-           face = freetype.Face("Vera.ttf")
-           face.set_char_size( 48*64 )
-           face.load_char('S')
-           bitmap = face.glyph.bitmap
-           print bitmap.buffer
-        
-        Screenshots
-        ===========
-        
-        Screenshot below comes from the wordle.py example. No clever tricks here, just
-        brute force.
-        
-        .. image:: https://raw.githubusercontent.com/rougier/freetype-py/master/doc/_static/wordle.png
-        
-        Screenshots below comes from the glyph-vector.py and glyph-vectopr-2.py
-        examples showing how to access a glyph outline information and use it to draw
-        the glyph. Rendering (with BÃ©zier curves) is done using matplotlib.
-        
-        .. image:: https://raw.githubusercontent.com/rougier/freetype-py/master/doc/_static/S.png
-        .. image:: https://raw.githubusercontent.com/rougier/freetype-py/master/doc/_static/G.png
-        
-        
-        Screenshot below comes from the glyph-color.py showing how to draw and combine
-        a glyph outline with the regular glyph.
-        
-        .. image:: https://raw.githubusercontent.com/rougier/freetype-py/master/doc/_static/outline.png
-        
-        The screenshot below comes from the hello-world.py example showing how to draw
-        text in a bitmap (that has been zoomed in to show antialiasing).
-        
-        .. image:: https://raw.githubusercontent.com/rougier/freetype-py/master/doc/_static/hello-world.png
-        
-        
-        The screenshot below comes from the agg-trick.py example showing an
-        implementation of ideas from the `Texts Rasterization Exposures
-        <http://agg.sourceforge.net/antigrain.com/research/font_rasterization/>`_ by
-        Maxim Shemarev.
-        
-        .. image:: https://raw.githubusercontent.com/rougier/freetype-py/master/doc/_static/agg-trick.png
-        
-        
-Keywords: freetype,font
-Platform: UNKNOWN
-Classifier: Development Status :: 5 - Production/Stable
-Classifier: Environment :: X11 Applications
-Classifier: Environment :: MacOS X
-Classifier: Intended Audience :: Developers
-Classifier: License :: OSI Approved :: BSD License
-Classifier: Operating System :: MacOS
-Classifier: Operating System :: Microsoft :: Windows
-Classifier: Operating System :: POSIX
-Classifier: Operating System :: Unix
-Classifier: Programming Language :: Python :: 2
-Classifier: Programming Language :: Python :: 3
-Classifier: Topic :: Multimedia :: Graphics
--- freetype-py-2.1.0.post1.orig/freetype_py.egg-info/SOURCES.txt
+++ /dev/null
@@ -1,148 +0,0 @@
-.gitignore
-.gitmodules
-.travis.yml
-LICENSE.txt
-MANIFEST.in
-NOTES.txt
-README.rst
-appveyor.yml
-setup-build-freetype.py
-setup.cfg
-setup.py
-tox.ini
-ci/custom_docker.sh
-ci/multibuild_config.sh
-debian/changelog
-debian/compat
-debian/control
-debian/copyright
-debian/python-freetype-py.lintian-overrides
-debian/rules
-debian/source/format
-doc/Makefile
-doc/api.rst
-doc/bbox.rst
-doc/bitmap.rst
-doc/bitmap_glyph.rst
-doc/bitmap_size.rst
-doc/charmap.rst
-doc/conf.py
-doc/constants.rst
-doc/face.rst
-doc/ft_encodings.rst
-doc/ft_face_flags.rst
-doc/ft_fstypes.rst
-doc/ft_glyph_bbox_modes.rst
-doc/ft_glyph_formats.rst
-doc/ft_kerning_modes.rst
-doc/ft_lcd_filters.rst
-doc/ft_load_flags.rst
-doc/ft_load_targets.rst
-doc/ft_open_modes.rst
-doc/ft_outline_flags.rst
-doc/ft_pixel_modes.rst
-doc/ft_render_modes.rst
-doc/ft_stroker_borders.rst
-doc/ft_stroker_linecaps.rst
-doc/ft_stroker_linejoins.rst
-doc/ft_style_flags.rst
-doc/glyph.rst
-doc/glyph_slot.rst
-doc/index.rst
-doc/license.rst
-doc/make.bat
-doc/make_enums.py
-doc/notes.rst
-doc/outline.rst
-doc/screenshots.rst
-doc/sfnt_name.rst
-doc/size_metrics.rst
-doc/stroker.rst
-doc/tt_adobe_ids.rst
-doc/tt_apple_ids.rst
-doc/tt_mac_ids.rst
-doc/tt_mac_langids.rst
-doc/tt_ms_ids.rst
-doc/tt_ms_langids.rst
-doc/tt_name_ids.rst
-doc/tt_platforms.rst
-doc/usage.rst
-doc/_static/G.png
-doc/_static/S.png
-doc/_static/agg-trick.png
-doc/_static/hello-world.png
-doc/_static/opengl.png
-doc/_static/outline.png
-doc/_static/wordle.png
-examples/Vera.ttf
-examples/VeraMono.ttf
-examples/agg-trick.py
-examples/ascii.py
-examples/bitmap_to_surface.py
-examples/emoji-color-cairo.py
-examples/emoji-color.py
-examples/example_1-cairo.py
-examples/example_1.py
-examples/font-info.py
-examples/ftdump.py
-examples/glyph-alpha.py
-examples/glyph-color-cairo.py
-examples/glyph-color.py
-examples/glyph-lcd-cairo.py
-examples/glyph-lcd.py
-examples/glyph-metrics.py
-examples/glyph-mono+alpha-cairo.py
-examples/glyph-monochrome.py
-examples/glyph-outline-cairo.py
-examples/glyph-outline.py
-examples/glyph-vector-2-cairo.py
-examples/glyph-vector-2.py
-examples/glyph-vector-cairo.py
-examples/glyph-vector.py
-examples/hello-world-cairo.py
-examples/hello-world.py
-examples/opengl.py
-examples/sfnt-names.py
-examples/shader.py
-examples/subpixel-positioning.py
-examples/texture_font.py
-examples/wordle-cairo.py
-examples/wordle.py
-freetype/__init__.py
-freetype/ft_errors.py
-freetype/ft_structs.py
-freetype/ft_types.py
-freetype/raw.py
-freetype/ft_enums/__init__.py
-freetype/ft_enums/ft_curve_tags.py
-freetype/ft_enums/ft_encodings.py
-freetype/ft_enums/ft_face_flags.py
-freetype/ft_enums/ft_fstypes.py
-freetype/ft_enums/ft_glyph_bbox_modes.py
-freetype/ft_enums/ft_glyph_formats.py
-freetype/ft_enums/ft_kerning_modes.py
-freetype/ft_enums/ft_lcd_filters.py
-freetype/ft_enums/ft_load_flags.py
-freetype/ft_enums/ft_load_targets.py
-freetype/ft_enums/ft_open_modes.py
-freetype/ft_enums/ft_outline_flags.py
-freetype/ft_enums/ft_pixel_modes.py
-freetype/ft_enums/ft_render_modes.py
-freetype/ft_enums/ft_stroker_borders.py
-freetype/ft_enums/ft_stroker_linecaps.py
-freetype/ft_enums/ft_stroker_linejoins.py
-freetype/ft_enums/ft_style_flags.py
-freetype/ft_enums/tt_adobe_ids.py
-freetype/ft_enums/tt_apple_ids.py
-freetype/ft_enums/tt_mac_ids.py
-freetype/ft_enums/tt_mac_langids.py
-freetype/ft_enums/tt_ms_ids.py
-freetype/ft_enums/tt_ms_langids.py
-freetype/ft_enums/tt_name_ids.py
-freetype/ft_enums/tt_platforms.py
-freetype_py.egg-info/PKG-INFO
-freetype_py.egg-info/SOURCES.txt
-freetype_py.egg-info/dependency_links.txt
-freetype_py.egg-info/top_level.txt
-freetype_py.egg-info/zip-safe
-tests/smoke_test.py
\ No newline at end of file
--- freetype-py-2.1.0.post1.orig/freetype_py.egg-info/dependency_links.txt
+++ /dev/null
@@ -1 +0,0 @@
-
--- freetype-py-2.1.0.post1.orig/freetype_py.egg-info/top_level.txt
+++ /dev/null
@@ -1 +0,0 @@
-freetype
--- freetype-py-2.1.0.post1.orig/freetype_py.egg-info/zip-safe
+++ /dev/null
@@ -1 +0,0 @@
-
